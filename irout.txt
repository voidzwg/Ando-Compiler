declare void @memset(i32*, i32, i32)
declare i32 @printf(i8*, ...)
declare i32 @__isoc99_scanf(i8*, ...)

@const_name5_0 = constant [5 x i32] [i32 5, i32 3, i32 3, i32 4, i32 0]
@const_name_6_0 = constant [3 x i32] [i32 0, i32 0, i32 2]
@_const_name7_0 = constant [4 x i32] [i32 0, i32 0, i32 3, i32 9]
@const_name8__0 = constant [2 x i32] [i32 7, i32 9]
@const_name9_0 = constant [1 x [3 x i32]][[3 x i32] [i32 1, i32 2, i32 3]]
@const_name_10_0 = constant [1 x [1 x i32]][[1 x i32] [i32 -78549321]]
@_const_name11_0 = constant [2 x [3 x i32]][[3 x i32] [i32 8, i32 0, i32 3], [3 x i32] [i32 9, i32 1, i32 9]]
@var_name1_0 = global i32 3
@var_name_2_0 = global i32 3
@_var_name3_0 = global i32 0
@var_name4__0 = global i32 4
@var_name5_0 = global [3 x i32] zeroinitializer

@var_name_6_0 = global [3 x i32] [i32 4, i32 33, i32 5]
@_var_name7_0 = global [3 x i32] zeroinitializer

@var_name8__0 = global [2 x i32] zeroinitializer

@var_name9_0 = global [8 x [3 x i32]] zeroinitializer

@var_name_10_0 = global [1 x [6 x i32]][[6 x i32] [i32 7, i32 4, i32 0, i32 6, i32 1, i32 6]]
@_var_name11_0 = global [2 x [1 x i32]][[1 x i32] [i32 0], [1 x i32] [i32 0]]
@var_name12__0 = global [2 x [3 x i32]][[3 x i32] [i32 8, i32 0, i32 3], [3 x i32] [i32 9, i32 1, i32 9]]
@.str.1 = constant [3 x i8] c"%d\00"
@.str.2 = constant [3 x i8] c"%d\00"
@.str.3 = constant [43 x i8] c"fun_name1_: two numbers are equal %d = %d\0A\00"
@.str.4 = constant [56 x i8] c"fun_name1_:  fun1_var2 > fun1_var3 %d > %d, %d-%d = %d\0A\00"
@.str.5 = constant [56 x i8] c"fun_name1_:  fun1_var2 < fun1_var3 %d < %d, %d-%d = %d\0A\00"
@.str.6 = constant [42 x i8] c"fun_name5: went to an inaccessible place\0A\00"
@.str.7 = constant [10 x i8] c"19373576\0A\00"
@.str.8 = constant [31 x i8] c"main: sum of var_name12_ : %d\0A\00"
@.str.9 = constant [26 x i8] c"main: %d^%d(%d<=16) = %d\0A\00"
@.str.10 = constant [34 x i8] c"%d %d %d %d %d %d %d %d %d %d %d\0A\00"
@.str.11 = constant [36 x i8] c"%d %d %d %d %d %d %d %d %d %d %d %d\00"
define void @fun_name1_() {
0:
	%1 = alloca i32
	%2 = sub i32 4, 3
	%3 = getelementptr [5 x i32], [5 x i32]* @const_name5_0, i32 0, i32 %2
	%4 = load i32, i32* %3
	%5 = add i32 28, %4
	%6 = getelementptr [1 x [6 x i32]], [1 x [6 x i32]]* @var_name_10_0, i32 0, i32 1, i32 2
	%7 = load i32, i32* %6
	%8 = sub i32 %5, %7
	store i32 %8, i32* %1
	%9 = alloca i32
	store i32 0, i32* %9
	%10 = alloca i32
	store i32 0, i32* %10
	%11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* %9)
	%12 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32* %10)
	%13 = load i32, i32* %9
	%14 = load i32, i32* %10
	%15 = icmp eq i32 %13, %14
	%16 = icmp ne i1 %15, 0
	br i1 %16, label %17, label %21
17:
	%18 = load i32, i32* %9
	%19 = load i32, i32* %10
	%20 = call i32 (i8*, ...) @printf(i8* getelementptr ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i32 %18, i32 %19)
	br label %21
21:
	%22 = load i32, i32* %9
	%23 = load i32, i32* %10
	%24 = icmp sgt i32 %22, %23
	%25 = icmp ne i1 %24, 0
	br i1 %25, label %26, label %36
26:
	%27 = load i32, i32* %9
	%28 = load i32, i32* %10
	%29 = sub i32 %27, %28
	store i32 %29, i32* %1
	%30 = load i32, i32* %9
	%31 = load i32, i32* %10
	%32 = load i32, i32* %9
	%33 = load i32, i32* %10
	%34 = load i32, i32* %1
	%35 = call i32 (i8*, ...) @printf(i8* getelementptr ([56 x i8], [56 x i8]* @.str.4, i64 0, i64 0), i32 %30, i32 %31, i32 %32, i32 %33, i32 %34)
	br label %41
36:
	%37 = load i32, i32* %9
	%38 = load i32, i32* %10
	%39 = icmp slt i32 %37, %38
	%40 = icmp ne i1 %39, 0
	br i1 %40, label %42, label %52
41:
	ret void
42:
	%43 = load i32, i32* %10
	%44 = load i32, i32* %9
	%45 = sub i32 %43, %44
	store i32 %45, i32* %1
	%46 = load i32, i32* %9
	%47 = load i32, i32* %10
	%48 = load i32, i32* %10
	%49 = load i32, i32* %9
	%50 = load i32, i32* %1
	%51 = call i32 (i8*, ...) @printf(i8* getelementptr ([56 x i8], [56 x i8]* @.str.5, i64 0, i64 0), i32 %46, i32 %47, i32 %48, i32 %49, i32 %50)
	br label %52
52:
	br label %41
}

define i32 @fun_name2(i32* %0, i32 %1) {
2:
	%3 = alloca i32
	store i32 %1, i32* %3
	%4 = alloca i32*
	store i32* %0, i32** %4
	%5 = alloca i32
	store i32 0, i32* %5
	br label %6
6:
	%7 = load i32, i32* %3
	%8 = icmp sgt i32 %7, 0
	%9 = icmp ne i1 %8, 0
	br i1 %9, label %22, label %20
10:
	%11 = load i32, i32* %5
	%12 = load i32*, i32** %4
	%13 = load i32, i32* %3
	%14 = sub i32 %13, 1
	%15 = getelementptr i32, i32* %12, i32 %14
	%16 = load i32, i32* %15
	%17 = add i32 %11, %16
	store i32 %17, i32* %5
	%18 = load i32, i32* %3
	%19 = sub i32 %18, 1
	store i32 %19, i32* %3
	br label %6
20:
	%21 = load i32, i32* %5
	ret i32 %21
22:
	%23 = icmp eq i32 0, 0
	%24 = icmp ne i1 %23, 0
	br i1 %24, label %10, label %20
}

define i32 @fun_name3([3 x i32]* %0, i32 %1) {
2:
	%3 = alloca i32
	store i32 %1, i32* %3
	%4 = alloca [3 x i32]*
	store [3 x i32]* %0, [3 x i32]** %4
	%5 = alloca i32
	store i32 0, i32* %5
	br label %6
6:
	%7 = load i32, i32* %3
	%8 = icmp sgt i32 %7, 0
	%9 = icmp ne i1 %8, 0
	br i1 %9, label %10, label %23
10:
	%11 = load i32, i32* %5
	%12 = load [3 x i32]*, [3 x i32]** %4
	%13 = load i32, i32* %3
	%14 = sub i32 %13, 1
	%15 = getelementptr [3 x i32], [3 x i32]* %12, i32 %14
	%16 = getelementptr [3 x i32], [3 x i32]* %15, i32 0, i32 0
	%17 = call i32 @fun_name2(i32* %16, i32 3)
	%18 = add i32 %11, %17
	store i32 %18, i32* %5
	%19 = load i32, i32* %3
	%20 = sub i32 %19, 1
	store i32 %20, i32* %3
	br label %6
21:
	%22 = load i32, i32* %5
	ret i32 %22
23:
	%24 = icmp eq i32 0, 1
	%25 = icmp ne i1 %24, 0
	br i1 %25, label %10, label %21
}

define i32 @fun_name4(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = icmp ne i32 1, 0
	br i1 %3, label %4, label %5
4:
	br label %5
5:
	%6 = load i32, i32* @var_name1_0
	%7 = icmp ne i32 5, %6
	%8 = icmp ne i1 %7, 0
	br i1 %8, label %9, label %10
9:
	br label %10
10:
	%11 = load i32, i32* %2
	%12 = icmp sle i32 %11, 0
	%13 = icmp ne i1 %12, 0
	br i1 %13, label %14, label %15
14:
	br label %15
15:
	ret i32 0
}

define i32 @fun_name5(i32 %0, i32 %1) {
2:
	%3 = alloca i32
	store i32 %1, i32* %3
	%4 = alloca i32
	store i32 %0, i32* %4
	%5 = alloca i32
	store i32 0, i32* %5
	%6 = alloca i32
	store i32 1, i32* %6
	br label %7
7:
	%8 = load i32, i32* %3
	%9 = icmp sge i32 %8, 1
	%10 = icmp ne i1 %9, 0
	br i1 %10, label %11, label %19
11:
	%12 = load i32, i32* %3
	%13 = sub i32 %12, 1
	store i32 %13, i32* %3
	%14 = load i32, i32* %5
	%15 = add i32 %14, 1
	store i32 %15, i32* %5
	%16 = load i32, i32* %5
	%17 = icmp eq i32 %16, 16
	%18 = icmp ne i1 %17, 0
	br i1 %18, label %21, label %22
19:
	%20 = load i32, i32* %6
	ret i32 %20
21:
	br label %19
22:
	%23 = load i32, i32* %6
	%24 = load i32, i32* %4
	%25 = mul i32 %23, %24
	store i32 %25, i32* %6
	br label %7
26:
	%27 = call i32 (i8*, ...) @printf(i8* getelementptr ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0))
	br label %7
28:
	br label %26
29:
	br label %26
}

define i32 @main() {
0:
	%1 = call i32 (i8*, ...) @printf(i8* getelementptr ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0))
	call void @fun_name1_()
	%2 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* @var_name12__0, i32 0, i32 0
	%3 = call i32 @fun_name3([3 x i32]* %2, i32 2)
	%4 = call i32 (i8*, ...) @printf(i8* getelementptr ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i32 %3)
	%5 = load i32, i32* @var_name1_0
	%6 = call i32 @fun_name4(i32 %5)
	%7 = alloca i32
	store i32 2, i32* %7
	%8 = alloca i32
	store i32 3, i32* %8
	%9 = load i32, i32* %7
	%10 = load i32, i32* %8
	%11 = load i32, i32* %8
	%12 = load i32, i32* %7
	%13 = load i32, i32* %8
	%14 = call i32 @fun_name5(i32 %12, i32 %13)
	%15 = call i32 (i8*, ...) @printf(i8* getelementptr ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 %9, i32 %10, i32 %11, i32 %14)
	%16 = getelementptr [5 x i32], [5 x i32]* @const_name5_0, i32 0, i32 3
	%17 = load i32, i32* %16
	%18 = getelementptr [3 x i32], [3 x i32]* @const_name_6_0, i32 0, i32 2
	%19 = load i32, i32* %18
	%20 = getelementptr [4 x i32], [4 x i32]* @_const_name7_0, i32 0, i32 0
	%21 = load i32, i32* %20
	%22 = getelementptr [2 x i32], [2 x i32]* @const_name8__0, i32 0, i32 1
	%23 = load i32, i32* %22
	%24 = getelementptr [1 x [3 x i32]], [1 x [3 x i32]]* @const_name9_0, i32 0, i32 0, i32 2
	%25 = load i32, i32* %24
	%26 = getelementptr [1 x [1 x i32]], [1 x [1 x i32]]* @const_name_10_0, i32 0, i32 0, i32 0
	%27 = load i32, i32* %26
	%28 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* @_const_name11_0, i32 0, i32 1, i32 1
	%29 = load i32, i32* %28
	%30 = call i32 (i8*, ...) @printf(i8* getelementptr ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0), i32 5, i32 3, i32 0, i32 6, i32 %17, i32 %19, i32 %21, i32 %23, i32 %25, i32 %27, i32 %29)
	%31 = load i32, i32* @var_name1_0
	%32 = load i32, i32* @var_name_2_0
	%33 = load i32, i32* @_var_name3_0
	%34 = load i32, i32* @var_name4__0
	%35 = getelementptr [3 x i32], [3 x i32]* @var_name5_0, i32 0, i32 3
	%36 = load i32, i32* %35
	%37 = getelementptr [3 x i32], [3 x i32]* @var_name_6_0, i32 0, i32 2
	%38 = load i32, i32* %37
	%39 = getelementptr [3 x i32], [3 x i32]* @_var_name7_0, i32 0, i32 0
	%40 = load i32, i32* %39
	%41 = getelementptr [2 x i32], [2 x i32]* @var_name8__0, i32 0, i32 1
	%42 = load i32, i32* %41
	%43 = getelementptr [8 x [3 x i32]], [8 x [3 x i32]]* @var_name9_0, i32 0, i32 0, i32 2
	%44 = load i32, i32* %43
	%45 = getelementptr [1 x [6 x i32]], [1 x [6 x i32]]* @var_name_10_0, i32 0, i32 0, i32 0
	%46 = load i32, i32* %45
	%47 = getelementptr [2 x [1 x i32]], [2 x [1 x i32]]* @_var_name11_0, i32 0, i32 1, i32 1
	%48 = load i32, i32* %47
	%49 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* @var_name12__0, i32 0, i32 1, i32 2
	%50 = load i32, i32* %49
	%51 = call i32 (i8*, ...) @printf(i8* getelementptr ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0), i32 %31, i32 %32, i32 %33, i32 %34, i32 %36, i32 %38, i32 %40, i32 %42, i32 %44, i32 %46, i32 %48, i32 %50)
	ret i32 0
}

