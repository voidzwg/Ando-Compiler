declare i32 @getint(...)
declare void @memset(i32*, i32, i32)
declare i32 @printf(i8*, ...)
@.str.1 = constant [4 x i8] c"%d\0A\00"
define void @solve() {
block1:
	%0 = getelementptr i32, i32* %a_0, i32 1
	%1 = load i32, i32* %0
	%2 = call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %1)
	ret void
}

define i32 @main() {
block2:
	%0 = alloca [2 x [2 x i32]]
	%1 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %0, i32 0, i32 0, i32 0
	call void @memset(i32* %1, i32 0, i32 16)
	store i32 0, i32* %1
	%2 = getelementptr i32, i32* %1, i32 1
	store i32 1, i32* %2
	%3 = getelementptr i32, i32* %1, i32 2
	store i32 2, i32* %3
	%4 = getelementptr i32, i32* %1, i32 3
	store i32 3, i32* %4
	%5 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %0, i32 0, i32 0
	%6 = load i32*[2 x i32]%5
	call void @solve(i32* %6)
	ret i32 0
}

