declare i32 @getint(...)
declare void @memset(i32*, i32, i32)
declare i32 @printf(i8*, ...)
@.str.1 = constant [20 x i8] c"Move from %d to %d\0A\00"
@.str.2 = constant [10 x i8] c"20373493\0A\00"
define void @hanoi(i32 %from_0, i32 %via_0, i32 %to_0, i32 %t_0) {
block1:
	%0 = alloca i32
	store i32 %t_0, i32* %0
	%1 = alloca i32
	store i32 %from_0, i32* %1
	%2 = alloca i32
	store i32 %to_0, i32* %2
	%3 = alloca i32
	store i32 %via_0, i32* %3
	%4 = load i32, i32* %0
	%5 = icmp eq i32 %4, 0
	%6 = icmp ne i1 %5, 0
	br i1 %6, label %block2, label %block3
block2:
	ret void
	br label %block3
block3:
	%7 = load i32, i32* %1
	%8 = load i32, i32* %2
	%9 = load i32, i32* %3
	%10 = load i32, i32* %0
	%11 = sub i32 %10, 1
	call void @hanoi(i32 %7, i32 %8, i32 %9, i32 %11)
	%12 = load i32, i32* %1
	%13 = load i32, i32* %2
	%14 = call i32 (i8*, ...) @printf(i8* getelementptr ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 %12, i32 %13)
	%15 = load i32, i32* %3
	%16 = load i32, i32* %1
	%17 = load i32, i32* %2
	%18 = load i32, i32* %0
	%19 = sub i32 %18, 1
	call void @hanoi(i32 %15, i32 %16, i32 %17, i32 %19)
	ret void
}

define i32 @main() {
block4:
	%0 = alloca i32
	store i32 0, i32* %0
	%1 = call i32 @getint()
	store i32 %1, i32* %0
	%2 = call i32 (i8*, ...) @printf(i8* getelementptr ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0))
	%3 = load i32, i32* %0
	call void @hanoi(i32 1, i32 2, i32 3, i32 %3)
	ret i32 0
}

